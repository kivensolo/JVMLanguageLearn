package com.builder;


//建造者模式：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
//建造者模式最主要的功能是基本方法的
//调用顺序安排，也就是这些基本方法已经实现了，通俗地说就是零件的装配，顺序不同产生
//的对象也不同；而工厂方法则重点是创建，创建零件是它的主要职责，组装顺序则不是它关
//心的。

//使用场景：相同的方法，不同的执行顺序，产生不同的事件结果时，可以采用建造者模式
//抽象建造类
public abstract class BaseBuilder {
    public abstract void addColor();

}
