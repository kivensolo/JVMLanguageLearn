# 方法工厂模式（抽象工厂的一种特例）
## 模式描述:
  把简单工厂中具体的工厂类，划分成两层：
  
**抽象工厂层(工厂接口：用于创建对象得接口) + 具体的工厂子类层（工厂实现类）**。

由具体实现类创建对应类的实例。
## 模式作用：
  可以一定程度上解耦，具体产品类和产品实现类隔离开。可以一定程度增加扩展性。
  
工厂方法只是抽象工厂的一个特例情况。
将类的实例化（具体产品的创建）延迟到工厂类的子类（具体工厂）中完成，
即由子类来决定应该实例化（创建）哪一个类。

**优点**:
1. 符合开-闭原则：新增一种产品时，只需要增加相应的具体产品类和相应的工厂子类即可
2. 符合单一职责原则：每个具体工厂类只负责创建对应的产品

**缺点**：
1. 增加了系统的复杂度：类的个数将成对增加
2. 增加了系统的抽象性和理解难度
3. 一个具体工厂只能创建一种具体产品